@model List<PAW.Models.ViewModels.TableroViewModel>
@using System.Security.Claims
@{
    ViewData["Title"] = "Mis Tableros";

    // 🔒 Filtrar solo los tableros del usuario logueado
    var userIdStr = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    var tablerosFiltrados = new List<PAW.Models.ViewModels.TableroViewModel>();

    if (int.TryParse(userIdStr, out var userId))
    {
        tablerosFiltrados = (Model ?? new List<PAW.Models.ViewModels.TableroViewModel>())
            .Where(t => t.UsuarioId == userId)
            .ToList();
    }
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0">@ViewData["Title"]</h2>
    <div class="d-flex gap-2">
        <a asp-controller="Tablero" asp-action="Create" class="btn btn-primary btn-sm">Nuevo tablero</a>
        <a asp-action="Index" class="btn btn-outline-secondary btn-sm">Refrescar</a>
    </div>
</div>

@if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
{
    <div class="alert alert-danger">@err</div>
}
@if (TempData["Success"] is string ok && !string.IsNullOrWhiteSpace(ok))
{
    <div class="alert alert-success">@ok</div>
}

@if (tablerosFiltrados == null || tablerosFiltrados.Count == 0)
{
    <div class="text-center my-5">
        <h4 class="fw-semibold">Aún no tienes tableros</h4>
        <p class="text-muted mb-3">Crea tu primer tablero para empezar a agregar listas y tarjetas.</p>
        <a asp-controller="Tablero" asp-action="Create" class="btn btn-primary">Crear mi primer tablero</a>
    </div>
}
else
{
    <div class="board-container">
        @foreach (var tablero in tablerosFiltrados)
        {
            <div class="board" data-tablero="@tablero.Id">
                <div class="board-header d-flex justify-content-between align-items-center">
                    <div>
                        <h3 class="mb-0">@tablero.Titulo</h3>
                        <small class="text-muted">@tablero.FechaCreacion?.ToString("dd/MM/yyyy")</small>
                    </div>

                    <!-- Menú tablero -->
                    <div class="dropdown">
                        <button class="btn btn-sm btn-outline-secondary" id="menuTablero-@tablero.Id" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-three-dots-vertical"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="menuTablero-@tablero.Id">
                            <li>
                                <a class="dropdown-item" asp-controller="Tablero" asp-action="Edit" asp-route-id="@tablero.Id">
                                    <i class="bi bi-pencil-square me-2"></i>Editar
                                </a>
                            </li>
                            <li>
                                <form asp-controller="Tablero" asp-action="Delete" asp-route-id="@tablero.Id" method="post" class="m-0"
                                      onsubmit="return confirm('¿Eliminar este tablero y todo su contenido?');">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="dropdown-item text-danger">
                                        <i class="bi bi-trash3 me-2"></i>Eliminar
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="lists-wrapper">
                    <!-- Listas -->
                    @if (tablero.Lista != null && tablero.Lista.Any())
                    {
                        @foreach (var lista in tablero.Lista.OrderBy(l => l.Orden))
                        {
                            <div class="list-column" data-lista="@lista.Id" ondrop="drop(event)" ondragover="allowDrop(event)">
                                <div class="list-header d-flex justify-content-between align-items-center">
                                    <strong>@lista.Titulo</strong>

                                    <!-- Menú lista -->
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Acciones de lista">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li class="px-3 py-2">
                                                <form asp-controller="Lista" asp-action="EditList" method="post" class="d-flex gap-1 m-0 p-0">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@lista.Id" />
                                                    <input type="text" name="titulo" value="@lista.Titulo" class="form-control form-control-sm" style="width:140px;" required />
                                                    <button class="btn btn-sm btn-primary" type="submit">Guardar</button>
                                                </form>
                                            </li>
                                            <li>
                                                <form asp-controller="Lista" asp-action="DeleteList" method="post" class="m-0"
                                                      onsubmit="return confirm('¿Eliminar esta lista y sus tarjetas?');">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@lista.Id" />
                                                    <button class="dropdown-item text-danger" type="submit">
                                                        <i class="bi bi-trash3 me-2"></i>Eliminar lista
                                                    </button>
                                                </form>
                                            </li>
                                        </ul>
                                    </div>
                                </div>

                                <!-- Tarjetas -->
                                <div class="cards-container">
                                    @if (lista.ListaTarjetas != null && lista.ListaTarjetas.Any())
                                    {
                                        @foreach (var tarjeta in lista.ListaTarjetas)
                                        {
                                            <div class="card-item shadow-sm" id="card-@tarjeta.Id" draggable="true" ondragstart="drag(event)">
                                                <div class="d-flex justify-content-between align-items-start gap-2">
                                                    <div class="flex-fill pe-2">
                                                        <strong>@tarjeta.Titulo</strong>
                                                        @if (!string.IsNullOrEmpty(tarjeta.Descripcion))
                                                        {
                                                            <p class="small mb-1 text-muted">@tarjeta.Descripcion</p>
                                                        }
                                                        @if (tarjeta.FechaVencimiento.HasValue)
                                                        {
                                                            <div class="badge bg-light text-dark border small">
                                                                Vence: @tarjeta.FechaVencimiento.Value.ToString("dd/MM/yyyy")
                                                            </div>
                                                        }
                                                    </div>

                                                    <!-- Menú tarjeta -->
                                                    <div class="dropdown">
                                                        <button class="btn btn-sm btn-light" id="menuTarjeta-@tarjeta.Id" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false" aria-label="Acciones de tarjeta">
                                                            <i class="bi bi-three-dots-vertical"></i>
                                                        </button>
                                                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="menuTarjeta-@tarjeta.Id">
                                                            <li>
                                                                <button type="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modalEditTarjeta-@tarjeta.Id">
                                                                    <i class="bi bi-pencil-square me-2 text-primary"></i>Editar
                                                                </button>
                                                            </li>
                                                            <li>
                                                                <form asp-controller="Tarjeta" asp-action="DeleteCard" method="post" class="m-0"
                                                                      onsubmit="return confirm('¿Eliminar esta tarjeta?');">
                                                                    @Html.AntiForgeryToken()
                                                                    <input type="hidden" name="id" value="@tarjeta.Id" />
                                                                    <button type="submit" class="dropdown-item text-danger">
                                                                        <i class="bi bi-trash3 me-2"></i>Eliminar
                                                                    </button>
                                                                </form>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>

                                                <!-- Comentarios de la tarjeta -->
                                                <details class="mt-2" id="comments-@tarjeta.Id" onclick="if(this.open){loadComments(@tarjeta.Id);}">
                                                    <summary class="small text-muted">💬 Comentarios</summary>
                                                    <div class="comments-box" id="comments-list-@tarjeta.Id">
                                                        <div class="small text-muted">Cargando comentarios…</div>
                                                    </div>
                                                    <form class="row g-2 align-items-center mt-2" onsubmit="return addComment(@tarjeta.Id, this);">
                                                        <div class="col-9">
                                                            <input type="text" name="contenido" class="form-control form-control-sm" placeholder="Escribe un comentario…" required />
                                                        </div>
                                                        <div class="col-3 text-end">
                                                            <button type="submit" class="btn btn-sm btn-outline-primary">Agregar</button>
                                                        </div>
                                                    </form>
                                                </details>
                                            </div>

                                            <!-- MODAL EDITAR TARJETA -->
                                            <div class="modal fade" id="modalEditTarjeta-@tarjeta.Id" tabindex="-1" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h5 class="modal-title"><i class="bi bi-pencil-square me-2"></i>Editar tarjeta</h5>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                                                        </div>
                                                        <form asp-controller="Tarjeta" asp-action="EditCard" method="post">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="id" value="@tarjeta.Id" />
                                                            <div class="modal-body">
                                                                <div class="mb-2">
                                                                    <label class="form-label">Título</label>
                                                                    <input name="titulo" class="form-control" value="@tarjeta.Titulo" required />
                                                                </div>
                                                                <div class="mb-2">
                                                                    <label class="form-label">Descripción</label>
                                                                    <textarea name="descripcion" class="form-control" rows="3">@tarjeta.Descripcion</textarea>
                                                                </div>
                                                                <div class="mb-2">
                                                                    <label class="form-label">Fecha de vencimiento</label>
                                                                    <input type="date" name="fechaVencimiento" class="form-control"
                                                                           value="@(tarjeta.FechaVencimiento.HasValue? tarjeta.FechaVencimiento.Value.ToString("yyyy-MM-dd") : "")" />
                                                                </div>
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                                                                <button type="submit" class="btn btn-primary">Guardar cambios</button>
                                                            </div>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- /MODAL EDITAR TARJETA -->
                                        }
                                    }
                                </div>

                                <!-- Nueva tarjeta -->
                                <form asp-controller="Tarjeta" asp-action="CreateCard" method="post" class="mt-2">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="listaId" value="@lista.Id" />
                                    <div class="input-group input-group-sm">
                                        <input name="titulo" class="form-control" placeholder="Nueva tarjeta…" required />
                                        <button class="btn btn-outline-primary" type="submit">Agregar</button>
                                    </div>
                                    <div class="collapse mt-2" id="collapseCardExtra-@lista.Id">
                                        <textarea name="descripcion" class="form-control form-control-sm mb-2" rows="2" placeholder="Descripción (opcional)"></textarea>
                                        <input type="date" name="fechaVencimiento" class="form-control form-control-sm" />
                                    </div>
                                    <button class="btn btn-link btn-sm mt-1 p-0" type="button"
                                            data-bs-toggle="collapse" data-bs-target="#collapseCardExtra-@lista.Id"
                                            aria-expanded="false" aria-controls="collapseCardExtra-@lista.Id">
                                        Más opciones
                                    </button>
                                </form>
                            </div>
                        }
                    }

                    <!-- Agregar nueva lista -->
                    <div class="list-column add-list">
                        <form asp-controller="Lista" asp-action="CreateList" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="tableroId" value="@tablero.Id" />
                            <div class="input-group input-group-sm">
                                <input name="titulo" class="form-control" placeholder="Nueva lista…" required />
                                <button class="btn btn-outline-success" type="submit">Agregar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        // Drag & Drop básico
        function allowDrop(ev){ ev.preventDefault(); }
        function drag(ev){ ev.dataTransfer.setData("text", ev.target.id); }
        async function drop(ev){
            ev.preventDefault();
            const cardId = ev.dataTransfer.getData("text");
            const el = document.getElementById(cardId);
            const targetList = ev.currentTarget.closest("[data-lista]");
            if(!el || !targetList) return;
            targetList.querySelector(".cards-container").appendChild(el);

            // Llamada para mover tarjeta
            const id = parseInt(cardId.replace("card-",""));
            const nuevaListaId = parseInt(targetList.getAttribute("data-lista"));
            try {
                const form = document.createElement('form');
                form.method = 'post';
                form.action = `/Tarjeta/MoveCard?id=${id}&nuevaListaId=${nuevaListaId}`;

                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                form.appendChild(tokenInput);

                document.body.appendChild(form);
                form.submit();
            } catch (e) {
                console.error(e);
                alert('No se pudo mover la tarjeta.');
            }
        }

        // Comentarios (placeholders)
        function loadComments(cardId){
            const box = document.getElementById(`comments-list-${cardId}`);
            if(!box) return;
            box.innerHTML = `<div class="small text-muted">Sin comentarios aún.</div>`;
        }
        function addComment(cardId, form){
            const input = form.querySelector('[name="contenido"]');
            if(!input || !input.value.trim()) return false;
            const list = document.getElementById(`comments-list-${cardId}`);
            const item = document.createElement('div');
            item.className = 'comment-item';
            item.textContent = input.value.trim();
            list.prepend(item);
            input.value = '';
            return false;
        }
    </script>
}

<style>
    .board-container {
        display: grid;
        gap: 1.5rem;
    }

    .board {
        background: #fff;
        border: 1px solid #e5e7eb;
        border-radius: 10px;
        padding: 1rem;
    }

    .board-header {
        margin-bottom: .75rem;
    }

    .lists-wrapper {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
        gap: 1rem;
        align-items: start;
    }

    .list-column {
        background: #f8fafc;
        border: 1px solid #e5e7eb;
        border-radius: 10px;
        padding: .75rem;
        min-height: 120px;
    }

    .list-header {
        margin-bottom: .5rem;
    }

    .cards-container .card-item {
        background: #fff;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: .6rem .6rem .5rem;
        margin-bottom: .5rem;
        cursor: grab;
    }

        .cards-container .card-item:active {
            cursor: grabbing;
        }

    .add-list {
        background: #f1f5f9;
        border-style: dashed;
        display: flex;
        align-items: center;
    }

    .comments-box {
        background: #f3f4f6;
        border-radius: 8px;
        padding: .5rem;
        margin-top: .25rem;
    }

    .comment-item {
        background: #fff;
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        padding: .4rem .6rem;
        margin: .35rem 0;
    }
</style>
